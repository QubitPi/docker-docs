<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C&#43;&#43; language-specific guide on Docker Docs</title>
    <link>https://docs.docker.com/language/cpp/</link>
    <description>Recent content in C&#43;&#43; language-specific guide on Docker Docs</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="https://docs.docker.com/language/cpp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Configure CI/CD for your C&#43;&#43; application</title>
      <link>https://docs.docker.com/language/cpp/configure-ci-cd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docs.docker.com/language/cpp/configure-ci-cd/</guid>
      <description>Prerequisites Complete all the previous sections of this guide, starting with Containerize a C++ application. You must have a GitHub account and a Docker account to complete this section.&#xA;Overview In this section, you&#39;ll learn how to set up and use GitHub Actions to build and test your Docker image as well as push it to Docker Hub. You will complete the following steps:&#xA;Create a new repository on GitHub.</description>
    </item>
    <item>
      <title>Containerize a C&#43;&#43; application</title>
      <link>https://docs.docker.com/language/cpp/containerize/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docs.docker.com/language/cpp/containerize/</guid>
      <description>Prerequisites You have a Git client. The examples in this section use a command-line based Git client, but you can use any client. Overview This section walks you through containerizing and running a C++ application.&#xA;Get the sample application Clone the sample application to use with this guide. Open a terminal, change directory to a directory that you want to work in, and run the following command to clone the repository:</description>
    </item>
    <item>
      <title>Test your C&#43;&#43; deployment</title>
      <link>https://docs.docker.com/language/cpp/deploy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docs.docker.com/language/cpp/deploy/</guid>
      <description>Prerequisites Complete all the previous sections of this guide, starting with Containerize a C++ application. Turn on Kubernetes in Docker Desktop. Overview In this section, you&#39;ll learn how to use Docker Desktop to deploy your application to a fully-featured Kubernetes environment on your development machine. This allows you to test and debug your workloads on Kubernetes locally before deploying.&#xA;Create a Kubernetes YAML file In your c-plus-plus-docker directory, create a file named docker-kubernetes.</description>
    </item>
    <item>
      <title>Use containers for C&#43;&#43; development</title>
      <link>https://docs.docker.com/language/cpp/develop/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docs.docker.com/language/cpp/develop/</guid>
      <description>Prerequisites Complete Containerize a C++ application.&#xA;Overview In this section, you&#39;ll learn how to set up a development environment for your containerized application. This includes:&#xA;Configuring Compose to automatically update your running Compose services as you edit and save your code Get the sample application Clone the sample application to use with this guide. Open a terminal, change directory to a directory that you want to work in, and run the following command to clone the repository:</description>
    </item>
  </channel>
</rss>
