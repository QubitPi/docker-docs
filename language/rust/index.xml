<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rust language-specific guide on Docker Docs</title>
    <link>https://docs.docker.com/language/rust/</link>
    <description>Recent content in Rust language-specific guide on Docker Docs</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="https://docs.docker.com/language/rust/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Build your Rust image</title>
      <link>https://docs.docker.com/language/rust/build-images/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docs.docker.com/language/rust/build-images/</guid>
      <description>Prerequisites You have installed the latest version of Docker Desktop. You have a git client. The examples in this section use a command-line based git client, but you can use any client. Overview This guide walks you through building your first Rust image. An image includes everything needed to run an application - the code or binary, runtime, dependencies, and any other file system objects required.&#xA;Get the sample application Clone the sample application to use with this guide.</description>
    </item>
    <item>
      <title>Configure CI/CD for your Rust application</title>
      <link>https://docs.docker.com/language/rust/configure-ci-cd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docs.docker.com/language/rust/configure-ci-cd/</guid>
      <description>Prerequisites Complete the previous sections of this guide, starting with Develop your Rust application. You must have a GitHub account and a Docker account to complete this section.&#xA;Overview In this section, you&#39;ll learn how to set up and use GitHub Actions to build and push your Docker image to Docker Hub. You will complete the following steps:&#xA;Create a new repository on GitHub. Define the GitHub Actions workflow. Run the workflow.</description>
    </item>
    <item>
      <title>Develop your Rust application</title>
      <link>https://docs.docker.com/language/rust/develop/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docs.docker.com/language/rust/develop/</guid>
      <description>Prerequisites You have installed the latest version of Docker Desktop. You have completed the walkthroughs in the Docker Desktop Learning Center to learn about Docker concepts. You have a git client. The examples in this section use a command-line based git client, but you can use any client. Overview In this section, you’ll learn how to use volumes and networking in Docker. You’ll also use Docker to build your images and Docker Compose to make everything a whole lot easier.</description>
    </item>
    <item>
      <title>Run your Rust image as a container</title>
      <link>https://docs.docker.com/language/rust/run-containers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docs.docker.com/language/rust/run-containers/</guid>
      <description>Prerequisite You have completed Build your Rust image and you have built an image.&#xA;Overview A container is a normal operating system process except that Docker isolates this process so that it has its own file system, its own networking, and its own isolated process tree separate from the host.&#xA;To run an image inside of a container, you use the docker run command. The docker run command requires one parameter which is the name of the image.</description>
    </item>
    <item>
      <title>Test your Rust deployment</title>
      <link>https://docs.docker.com/language/rust/deploy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docs.docker.com/language/rust/deploy/</guid>
      <description>Prerequisites Complete the previous sections of this guide, starting with Develop your Rust application. Turn on Kubernetes in Docker Desktop. Overview In this section, you&#39;ll learn how to use Docker Desktop to deploy your application to a fully-featured Kubernetes environment on your development machine. This lets you to test and debug your workloads on Kubernetes locally before deploying.&#xA;Create a Kubernetes YAML file In your docker-rust-postgres directory, create a file named docker-rust-kubernetes.</description>
    </item>
  </channel>
</rss>
