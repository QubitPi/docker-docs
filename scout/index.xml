<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker Scout on Docker Docs</title>
    <link>https://docs.docker.com/scout/</link>
    <description>Recent content in Docker Scout on Docker Docs</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="https://docs.docker.com/scout/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Advisory database sources and matching service</title>
      <link>https://docs.docker.com/scout/deep-dive/advisory-db-sources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docs.docker.com/scout/deep-dive/advisory-db-sources/</guid>
      <description>Reliable information sources are key for Docker Scout&#39;s ability to surface relevant and accurate assessments of your software artifacts. Given the diversity of sources and methodologies in the industry, discrepancies in vulnerability assessment results can and do happen. This page describes how the Docker Scout advisory database and its CVE-to-package matching approach works to deal with these discrepancies.&#xA;Advisory database sources Docker Scout aggregates vulnerability data from multiple sources. The data is continuously updated to ensure that your security posture is represented using the latest available information, in real-time.</description>
    </item>
    <item>
      <title>Dashboard</title>
      <link>https://docs.docker.com/scout/explore/dashboard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docs.docker.com/scout/explore/dashboard/</guid>
      <description>The Docker Scout Dashboard helps you share the analysis of images in an organization with your team. Developers can now see an overview of their security status across all their images from both Docker Hub and Artifactory, and get remediation advice at their fingertips. It helps team members in roles such as security, compliance, and operations to know what vulnerabilities and issues they need to focus on.&#xA;Overview The Overview tab provides a summary for the repositories in the selected organization.</description>
    </item>
    <item>
      <title>Data collection and storage in Docker Scout</title>
      <link>https://docs.docker.com/scout/deep-dive/data-handling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docs.docker.com/scout/deep-dive/data-handling/</guid>
      <description>Docker Scout&#39;s image analysis works by collecting metadata from the container images that you analyze. This metadata is stored on the Docker Scout platform.&#xA;Data transmission This section describes the data that Docker Scout collects and sends to the platform.&#xA;Image metadata Docker Scout collects the following image metadata:&#xA;Image creation timestamp Image digest Ports exposed by the image Environment variable names and values Name and value of image labels Order of image layers Hardware architecture Operating system type and version Registry URL and type Image digests are created for each layer of an image when the image is built and pushed to a registry.</description>
    </item>
    <item>
      <title>Docker Scout CLI release notes</title>
      <link>https://docs.docker.com/scout/release-notes/cli/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docs.docker.com/scout/release-notes/cli/</guid>
      <description>This page contains information about the new features, improvements, known issues, and bug fixes in the Docker Scout CLI plugin and the docker/scout-action GitHub Action.&#xA;1.10.0 2024-06-26 Bug fixes and enhancements Add new classifiers:&#xA;irssi Backdrop CrateDB CLI (Crash) monica Openliberty dumb-init friendica redmine Fix whitespace-only originator on package breaking BuildKit exporters&#xA;Fix parsing image references in SPDX statement for images with a digest&#xA;Support sbom:// prefix for image comparison:</description>
    </item>
    <item>
      <title>Configure Docker Scout with environment variables</title>
      <link>https://docs.docker.com/scout/how-tos/configure-cli/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docs.docker.com/scout/how-tos/configure-cli/</guid>
      <description>The following environment variables are available to configure the Docker Scout CLI commands, and the corresponding docker/scout-cli container image:&#xA;Name Format Description DOCKER_SCOUT_CACHE_FORMAT String Format of the local image cache; can be oci or tar (default: oci) DOCKER_SCOUT_CACHE_DIR String Directory where the local SBOM cache is stored (default: $HOME/.docker/scout) DOCKER_SCOUT_NO_CACHE Boolean When set to true, disables the use of local SBOM cache DOCKER_SCOUT_OFFLINE Boolean Use offline mode when indexing SBOM DOCKER_SCOUT_REGISTRY_TOKEN String Token for authenticating to a registry when pulling images DOCKER_SCOUT_REGISTRY_USER String Username for authenticating to a registry when pulling images DOCKER_SCOUT_REGISTRY_PASSWORD String Password or personal access token for authenticating to a registry when pulling images DOCKER_SCOUT_HUB_USER String Docker Hub username for authenticating to the Docker Scout backend DOCKER_SCOUT_HUB_PASSWORD String Docker Hub password or personal access token for authenticating to the Docker Scout backend DOCKER_SCOUT_NEW_VERSION_WARN Boolean Warn about new versions of the Docker Scout CLI DOCKER_SCOUT_EXPERIMENTAL_WARN Boolean Warn about experimental features DOCKER_SCOUT_EXPERIMENTAL_POLICY_OUTPUT Boolean Disable experimental output for policy evaluation Offline mode Under normal operation, Docker Scout cross-references external systems, such as npm, NuGet, or proxy.</description>
    </item>
    <item>
      <title>Docker Scout image analysis</title>
      <link>https://docs.docker.com/scout/explore/analysis/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docs.docker.com/scout/explore/analysis/</guid>
      <description>When you activate image analysis for a repository, Docker Scout automatically analyzes new images that you push to that repository.&#xA;Image analysis extracts the Software Bill of Material (SBOM) and other image metadata,and evaluates it against vulnerability data from security advisories.&#xA;If you run image analysis as a one-off task using the CLI or Docker Desktop, Docker Scout won&#39;t store any data about your image. If you enable Docker Scout for your container image repositories however, Docker Scout saves a metadata snapshot of your images after the analysis.</description>
    </item>
    <item>
      <title>Docker Scout metrics exporter</title>
      <link>https://docs.docker.com/scout/explore/metrics-exporter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docs.docker.com/scout/explore/metrics-exporter/</guid>
      <description>Docker Scout exposes a metrics HTTP endpoint that lets you scrape vulnerability and policy data from Docker Scout, using Prometheus or Datadog. With this you can create your own, self-hosted Docker Scout dashboards for visualizing supply chain metrics.&#xA;Metrics The metrics endpoint exposes the following metrics:&#xA;Metric Description Labels Type scout_stream_vulnerabilities Vulnerabilities in a stream streamName, severity Gauge scout_policy_compliant_images Compliant images for a policy in a stream id, displayName, streamName Gauge scout_policy_evaluated_images Total images evaluated against a policy in a stream id, displayName, streamName Gauge Streams</description>
    </item>
    <item>
      <title>Docker Scout quickstart</title>
      <link>https://docs.docker.com/scout/quickstart/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docs.docker.com/scout/quickstart/</guid>
      <description>Docker Scout analyzes image contents and generates a detailed report of packages and vulnerabilities that it detects. It can provide you with suggestions for how to remediate issues discovered by image analysis.&#xA;This guide takes a vulnerable container image and shows you how to use Docker Scout to identify and fix the vulnerabilities, compare image versions over time, and share the results with your team.&#xA;Step 1: Setup This example project contains a vulnerable Node.</description>
    </item>
    <item>
      <title>Docker Scout release notes</title>
      <link>https://docs.docker.com/scout/release-notes/platform/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docs.docker.com/scout/release-notes/platform/</guid>
      <description>This page contains information about the new features, improvements, known issues, and bug fixes in Docker Scout releases. These release notes cover the Docker Scout platform, including the Dashboard. For CLI release notes, refer to Docker Scout CLI release notes.&#xA;Take a look at the Docker Public Roadmap for what&#39;s coming next.&#xA;Q2 2024 New features and enhancements released in the second quarter of 2024.&#xA;2024-05-0x This release introduces initial support for Exceptions in the Docker Scout Dashboard.</description>
    </item>
    <item>
      <title>Docker Scout SBOMs</title>
      <link>https://docs.docker.com/scout/how-tos/view-create-sboms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docs.docker.com/scout/how-tos/view-create-sboms/</guid>
      <description>Image analysis uses image SBOMs to understand what packages and versions an image contains. Docker Scout uses SBOM attestations if available on the image (recommended). If no SBOM attestation is available, Docker Scout creates one by indexing the image contents.&#xA;View from CLI To view the contents of the SBOM that Docker Scout generates, you can use the docker scout sbom command.&#xA;$ docker scout sbom [IMAGE] By default, this prints the SBOM in a JSON format to stdout.</description>
    </item>
    <item>
      <title>Image details view</title>
      <link>https://docs.docker.com/scout/explore/image-details-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docs.docker.com/scout/explore/image-details-view/</guid>
      <description>The image details view shows a breakdown of the Docker Scout analysis. You can access the image view from the Docker Scout Dashboard, the Docker Desktop Images view, and from the image tag page on Docker Hub. The image details show a breakdown of the image hierarchy (base images), image layers, packages, and vulnerabilities.&#xA;Docker Desktop first analyzes images locally, where it generates a software bill of materials (SBOM). Docker Desktop, Docker Hub, and the Docker Scout Dashboard and CLI all use the package URL (PURL) links in this SBOM to query for matching Common Vulnerabilities and Exposures (CVEs) in Docker Scout&#39;s advisory database.</description>
    </item>
    <item>
      <title>Install Docker Scout</title>
      <link>https://docs.docker.com/scout/install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docs.docker.com/scout/install/</guid>
      <description>The Docker Scout CLI plugin comes pre-installed with Docker Desktop.&#xA;If you run Docker Engine without Docker Desktop, Docker Scout doesn&#39;t come pre-installed, but you can install it as a standalone binary.&#xA;Installation script To install the latest version of the plugin, run the following commands:&#xA;$ curl -fsSL https://raw.githubusercontent.com/docker/scout-cli/main/install.sh -o install-scout.sh $ sh install-scout.sh Note&#xA;Always examine scripts downloaded from the internet before running them locally. Before installing, make yourself familiar with potential risks and limitations of the convenience script.</description>
    </item>
    <item>
      <title>Manage vulnerability exceptions</title>
      <link>https://docs.docker.com/scout/explore/exceptions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docs.docker.com/scout/explore/exceptions/</guid>
      <description>Vulnerabilities found in container images sometimes need additional context. Just because an image contains a vulnerable package, it doesn&#39;t mean that the vulnerability is exploitable. Exceptions in Docker Scout lets you address false positives in image analysis using Vulnerability Exploitability eXchange (VEX) documents.&#xA;By negating non-applicable vulnerabilities, you can make it easier for yourself and downstream consumers of your images to understand the security implications of a vulnerability in the context of an image.</description>
    </item>
    <item>
      <title>Software Bill of Materials</title>
      <link>https://docs.docker.com/scout/concepts/sbom/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docs.docker.com/scout/concepts/sbom/</guid>
      <description>A Bill of Materials (BOM) is a list of materials, parts, and the quantities of each needed to manufacture a product. For example, a BOM for a computer might list the motherboard, CPU, RAM, power supply, storage devices, case, and other components, along with the quantities of each that are needed to build the computer.&#xA;A Software Bill of Materials (SBOM) is a list of all the components that make up a piece of software.</description>
    </item>
    <item>
      <title>Software supply chain security</title>
      <link>https://docs.docker.com/scout/concepts/s3c/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docs.docker.com/scout/concepts/s3c/</guid>
      <description>The term &amp;quot;software supply chain&amp;quot; refers to the end-to-end process of developing and delivering software, from the development to deployment and maintenance. Software supply chain security, or &amp;quot;S3C&amp;quot; for short, is the practice for protecting the components and processes of the supply chain.&#xA;S3C is a fundamental change in how organizations approach software security. Traditionally in the software industry, security and compliance has been mostly an afterthought, left to the software delivery or release phase.</description>
    </item>
    <item>
      <title>Suppress image vulnerabilities with VEX</title>
      <link>https://docs.docker.com/scout/guides/vex/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docs.docker.com/scout/guides/vex/</guid>
      <description>Vulnerability Exploitability eXchange (VEX) is a way to add context about how a software product is affected by a vulnerable component. In this guide, you will learn about:&#xA;How VEX can help you suppress non-applicable or fixed vulnerabilities found in your images How to create VEX documents and statements How to apply and consume VEX data with Docker Scout Experimental&#xA;Support for VEX is an experimental feature in Docker Scout. We recommend that you do not use this feature in production environments as this feature may change or be removed from future releases.</description>
    </item>
    <item>
      <title>Use Scout with different artifact types</title>
      <link>https://docs.docker.com/scout/how-tos/artifact-types/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docs.docker.com/scout/how-tos/artifact-types/</guid>
      <description>Some of the Docker Scout CLI commands support prefixes for specifying the location or type of artifact that you would like to analyze.&#xA;By default, image analysis with the docker scout cves command targets images in the local image store of the Docker Engine. The following command always uses a local image if it exists:&#xA;$ docker scout cves &amp;lt;image&amp;gt; If the image doesn&#39;t exist locally, Docker pulls the image before running the analysis.</description>
    </item>
  </channel>
</rss>
