<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mastering Testcontainers Cloud by Docker: streamlining integration testing with containers
 on Docker Docs</title>
    <link>https://docker.qubitpi.org/guides/testcontainers-cloud/</link>
    <description>Recent content in Mastering Testcontainers Cloud by Docker: streamlining integration testing with containers
 on Docker Docs</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="https://docker.qubitpi.org/guides/testcontainers-cloud/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Why Testcontainers Cloud?</title>
      <link>https://docker.qubitpi.org/guides/testcontainers-cloud/why/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docker.qubitpi.org/guides/testcontainers-cloud/why/</guid>
      <description>&lt;div id=&#34;youtube-player-6dRRlk5Vd0E&#34; data-video-id=&#34;6dRRlk5Vd0E&#34; class=&#34;youtube-video aspect-video h-fit w-full py-2&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Testcontainers Cloud is a powerful cloud-based solution designed to optimize integration testing with Testcontainers by offloading container management to the cloud. It helps developers and teams overcome the limitations of traditional local and CI-based testing, ensuring consistent environments, faster test execution, and scalable workflows. Whether you&#39;re new to Testcontainers or looking to enhance your existing setup, Testcontainers Cloud offers a seamless way to manage containerized tests, improving efficiency and reliability in your development pipeline.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Setting up Testcontainers Cloud by Docker</title>
      <link>https://docker.qubitpi.org/guides/testcontainers-cloud/demo-local/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docker.qubitpi.org/guides/testcontainers-cloud/demo-local/</guid>
      <description>&lt;div id=&#34;youtube-player-7c3xLAG560U&#34; data-video-id=&#34;7c3xLAG560U&#34; class=&#34;youtube-video aspect-video h-fit w-full py-2&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;This demo shows the process of setting up Testcontainers Cloud by Docker to&#xA;work in your local development environment using the Testcontainers Desktop&#xA;application. By the end of this walkthrough, you&#39;ll have Testcontainers Cloud&#xA;by Docker up and running, ready to offload container management from your local&#xA;machine to the cloud for more efficient testing.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Install and configure Testcontainers Cloud and the CLI to seamlessly integrate with your local development environment.&lt;/li&gt;&#xA;&lt;li&gt;Set up and configure the Testcontainers Desktop application to monitor and manage cloud-based containers during local tests.&lt;/li&gt;&#xA;&lt;li&gt;Create and run integration tests using Testcontainers that leverage cloud-based container resources.&lt;/li&gt;&#xA;&lt;li&gt;Monitor and manage containers efficiently, understanding how Testcontainers Cloud automates cleanup and ensures consistent testing environments.&lt;/li&gt;&#xA;&lt;li&gt;Review options for monitoring and troubleshooting in the Testcontainers Cloud Dashboard.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Configuring Testcontainers Cloud in the CI Pipeline</title>
      <link>https://docker.qubitpi.org/guides/testcontainers-cloud/demo-ci/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docker.qubitpi.org/guides/testcontainers-cloud/demo-ci/</guid>
      <description>&lt;div id=&#34;youtube-player-NlZY9aumKJU&#34; data-video-id=&#34;NlZY9aumKJU&#34; class=&#34;youtube-video aspect-video h-fit w-full py-2&#34;&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;This demo shows how Testcontainers Cloud can be seamlessly integrated into a&#xA;Continuous Integration (CI) pipeline using GitHub Workflows, providing a&#xA;powerful solution for running containerized integration tests without&#xA;overloading local or CI runner resources. By leveraging GitHub Actions,&#xA;developers can automate the process of spinning up and managing containers for&#xA;testing in the cloud, ensuring faster and more reliable test execution. With&#xA;just a few configuration steps, including setting up Testcontainers Cloud&#xA;authentication and adding it to your workflow, you can offload container&#xA;orchestration to the cloud. This approach improves the scalability of your&#xA;pipeline, ensures consistency across tests, and simplifies resource management,&#xA;making it an ideal solution for modern, containerized development workflows.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Common challenges and questions</title>
      <link>https://docker.qubitpi.org/guides/testcontainers-cloud/common-questions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docker.qubitpi.org/guides/testcontainers-cloud/common-questions/</guid>
      <description>&lt;!-- vale Docker.HeadingLength = NO --&gt;&#xA;&#xA;&lt;h3 class=&#34; scroll-mt-20&#34; id=&#34;how-is-testcontainers-cloud-different-from-the-open-source-testcontainers-framework&#34;&gt;&#xA;  &lt;a class=&#34;text-black dark:text-white no-underline hover:underline&#34; href=&#34;#how-is-testcontainers-cloud-different-from-the-open-source-testcontainers-framework&#34;&gt;&#xA;    How is Testcontainers Cloud different from the open-source Testcontainers framework?&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;While the open-source Testcontainers is a library that provides a lightweight APIs for bootstrapping local development and test dependencies with real services wrapped in Docker containers, Testcontainers Cloud provides a cloud runtime for these containers. This reduces the resource strain on local environments and provides more scalability, especially in CI/CD workflows, that enables consistent Testcontainers experience across the organization.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
