<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Overview of the Docker workshop on Docker Docs</title>
    <link>https://docker.qubitpi.org/get-started/workshop/</link>
    <description>Recent content in Overview of the Docker workshop on Docker Docs</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="https://docker.qubitpi.org/get-started/workshop/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Containerize an application</title>
      <link>https://docker.qubitpi.org/get-started/workshop/02_our_app/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docker.qubitpi.org/get-started/workshop/02_our_app/</guid>
      <description>&lt;p&gt;For the rest of this guide, you&#39;ll be working with a simple todo&#xA;list manager that runs on Node.js. If you&#39;re not familiar with Node.js,&#xA;don&#39;t worry. This guide doesn&#39;t require any prior experience with JavaScript.&lt;/p&gt;&#xA;&#xA;&lt;h2 class=&#34; scroll-mt-20&#34; id=&#34;prerequisites&#34;&gt;&#xA;  &lt;a class=&#34;text-black dark:text-white no-underline hover:underline&#34; href=&#34;#prerequisites&#34;&gt;&#xA;    Prerequisites&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;You have installed the latest version of &#xA;    &#xA;    &#xA;  &#xA;  &lt;a class=&#34;link&#34; href=&#34;https://docker.qubitpi.org/get-started/get-docker/&#34;&gt;Docker Desktop&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;li&gt;You have installed a &#xA;  &lt;a&#xA;    class=&#34;link&#34;&#xA;    href=&#34;https://git-scm.com/downloads&#34;&#xA;    rel=&#34;noopener&#34;&gt;Git client&lt;span class=&#34;pl-1 icon-svg icon-sm&#34;&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; width=&#34;48&#34; height=&#34;48&#34; viewBox=&#34;0 -960 960 960&#34;&gt;&lt;path d=&#34;M180-120q-24 0-42-18t-18-42v-600q0-24 18-42t42-18h249q12.75 0 21.38 8.68 8.62 8.67 8.62 21.5 0 12.82-8.62 21.32-8.63 8.5-21.38 8.5H180v600h600v-249q0-12.75 8.68-21.38 8.67-8.62 21.5-8.62 12.82 0 21.32 8.62 8.5 8.63 8.5 21.38v249q0 24-18 42t-42 18H180Zm600-617L403-360q-9 9-21 8.5t-21-9.5q-9-9-9-21t9-21l377-377H549q-12.75 0-21.37-8.68-8.63-8.67-8.63-21.5 0-12.82 8.63-21.32 8.62-8.5 21.37-8.5h261q12.75 0 21.38 8.62Q840-822.75 840-810v261q0 12.75-8.68 21.37-8.67 8.63-21.5 8.63-12.82 0-21.32-8.63-8.5-8.62-8.5-21.37v-188Z&#34;/&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;li&gt;You have an IDE or a text editor to edit files. Docker recommends using &#xA;  &lt;a&#xA;    class=&#34;link&#34;&#xA;    href=&#34;https://code.visualstudio.com/&#34;&#xA;    rel=&#34;noopener&#34;&gt;Visual Studio Code&lt;span class=&#34;pl-1 icon-svg icon-sm&#34;&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; width=&#34;48&#34; height=&#34;48&#34; viewBox=&#34;0 -960 960 960&#34;&gt;&lt;path d=&#34;M180-120q-24 0-42-18t-18-42v-600q0-24 18-42t42-18h249q12.75 0 21.38 8.68 8.62 8.67 8.62 21.5 0 12.82-8.62 21.32-8.63 8.5-21.38 8.5H180v600h600v-249q0-12.75 8.68-21.38 8.67-8.62 21.5-8.62 12.82 0 21.32 8.62 8.5 8.63 8.5 21.38v249q0 24-18 42t-42 18H180Zm600-617L403-360q-9 9-21 8.5t-21-9.5q-9-9-9-21t9-21l377-377H549q-12.75 0-21.37-8.68-8.63-8.67-8.63-21.5 0-12.82 8.63-21.32 8.62-8.5 21.37-8.5h261q12.75 0 21.38 8.62Q840-822.75 840-810v261q0 12.75-8.68 21.37-8.67 8.63-21.5 8.63-12.82 0-21.32-8.63-8.5-8.62-8.5-21.37v-188Z&#34;/&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;h2 class=&#34; scroll-mt-20&#34; id=&#34;get-the-app&#34;&gt;&#xA;  &lt;a class=&#34;text-black dark:text-white no-underline hover:underline&#34; href=&#34;#get-the-app&#34;&gt;&#xA;    Get the app&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;Before you can run the application, you need to get the application source code onto your machine.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Update the application</title>
      <link>https://docker.qubitpi.org/get-started/workshop/03_updating_app/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docker.qubitpi.org/get-started/workshop/03_updating_app/</guid>
      <description>&lt;p&gt;In &#xA;  &lt;a class=&#34;link&#34; href=&#34;https://docker.qubitpi.org/get-started/workshop/02_our_app/&#34;&gt;part 1&lt;/a&gt;, you containerized a todo application. In this part, you&#39;ll update the application and image. You&#39;ll also learn how to stop and remove a container.&lt;/p&gt;&#xA;&#xA;&lt;h2 class=&#34; scroll-mt-20&#34; id=&#34;update-the-source-code&#34;&gt;&#xA;  &lt;a class=&#34;text-black dark:text-white no-underline hover:underline&#34; href=&#34;#update-the-source-code&#34;&gt;&#xA;    Update the source code&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;In the following steps, you&#39;ll change the &amp;quot;empty text&amp;quot; when you don&#39;t have any todo list items to &amp;quot;You have no todo items yet! Add one above!&amp;quot;&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;In the &lt;code&gt;src/static/js/app.js&lt;/code&gt; file, update line 56 to use the new empty text.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Share the application</title>
      <link>https://docker.qubitpi.org/get-started/workshop/04_sharing_app/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docker.qubitpi.org/get-started/workshop/04_sharing_app/</guid>
      <description>&lt;p&gt;Now that you&#39;ve built an image, you can share it. To share Docker images, you have to use a Docker&#xA;registry. The default registry is Docker Hub and is where all of the images you&#39;ve used have come from.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;blockquote&#xA;  &#xA;  class=&#34;px-4 border-l-4 text-gray-light dark:text-gray-dark&#34;&gt;&#xA;    &lt;p&gt;&lt;strong&gt;Docker ID&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;A Docker ID lets you access Docker Hub, which is the world&#39;s largest library and community for container images. Create a &#xA;  &lt;a&#xA;    class=&#34;link&#34;&#xA;    href=&#34;https://hub.docker.com/signup&#34;&#xA;    rel=&#34;noopener&#34;&gt;Docker ID&lt;span class=&#34;pl-1 icon-svg icon-sm&#34;&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; width=&#34;48&#34; height=&#34;48&#34; viewBox=&#34;0 -960 960 960&#34;&gt;&lt;path d=&#34;M180-120q-24 0-42-18t-18-42v-600q0-24 18-42t42-18h249q12.75 0 21.38 8.68 8.62 8.67 8.62 21.5 0 12.82-8.62 21.32-8.63 8.5-21.38 8.5H180v600h600v-249q0-12.75 8.68-21.38 8.67-8.62 21.5-8.62 12.82 0 21.32 8.62 8.5 8.63 8.5 21.38v249q0 24-18 42t-42 18H180Zm600-617L403-360q-9 9-21 8.5t-21-9.5q-9-9-9-21t9-21l377-377H549q-12.75 0-21.37-8.68-8.63-8.67-8.63-21.5 0-12.82 8.63-21.32 8.62-8.5 21.37-8.5h261q12.75 0 21.38 8.62Q840-822.75 840-810v261q0 12.75-8.68 21.37-8.67 8.63-21.5 8.63-12.82 0-21.32-8.63-8.5-8.62-8.5-21.37v-188Z&#34;/&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/a&gt; for free if you don&#39;t have one.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Persist the DB</title>
      <link>https://docker.qubitpi.org/get-started/workshop/05_persisting_data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docker.qubitpi.org/get-started/workshop/05_persisting_data/</guid>
      <description>&lt;p&gt;In case you didn&#39;t notice, your todo list is empty every single time&#xA;you launch the container. Why is this? In this part, you&#39;ll dive into how the container is working.&lt;/p&gt;&#xA;&#xA;&lt;h2 class=&#34; scroll-mt-20&#34; id=&#34;the-containers-filesystem&#34;&gt;&#xA;  &lt;a class=&#34;text-black dark:text-white no-underline hover:underline&#34; href=&#34;#the-containers-filesystem&#34;&gt;&#xA;    The container&#39;s filesystem&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;When a container runs, it uses the various layers from an image for its filesystem.&#xA;Each container also gets its own &amp;quot;scratch space&amp;quot; to create/update/remove files. Any&#xA;changes won&#39;t be seen in another container, even if they&#39;re using the same image.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Use bind mounts</title>
      <link>https://docker.qubitpi.org/get-started/workshop/06_bind_mounts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docker.qubitpi.org/get-started/workshop/06_bind_mounts/</guid>
      <description>&lt;p&gt;In &#xA;  &lt;a class=&#34;link&#34; href=&#34;https://docker.qubitpi.org/get-started/workshop/05_persisting_data/&#34;&gt;part 4&lt;/a&gt;, you used a volume mount to persist the&#xA;data in your database. A volume mount is a great choice when you need somewhere&#xA;persistent to store your application data.&lt;/p&gt;&#xA;&lt;p&gt;A bind mount is another type of mount, which lets you share a directory from the&#xA;host&#39;s filesystem into the container. When working on an application, you can&#xA;use a bind mount to mount source code into the container. The container sees the&#xA;changes you make to the code immediately, as soon as you save a file. This means&#xA;that you can run processes in the container that watch for filesystem changes&#xA;and respond to them.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Multi container apps</title>
      <link>https://docker.qubitpi.org/get-started/workshop/07_multi_container/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docker.qubitpi.org/get-started/workshop/07_multi_container/</guid>
      <description>&lt;p&gt;Up to this point, you&#39;ve been working with single container apps. But, now you will add MySQL to the&#xA;application stack. The following question often arises - &amp;quot;Where will MySQL run? Install it in the same&#xA;container or run it separately?&amp;quot; In general, each container should do one thing and do it well. The following are a few reasons to run the container separately:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;There&#39;s a good chance you&#39;d have to scale APIs and front-ends differently than databases.&lt;/li&gt;&#xA;&lt;li&gt;Separate containers let you version and update versions in isolation.&lt;/li&gt;&#xA;&lt;li&gt;While you may use a container for the database locally, you may want to use a managed service&#xA;for the database in production. You don&#39;t want to ship your database engine with your app then.&lt;/li&gt;&#xA;&lt;li&gt;Running multiple processes will require a process manager (the container only starts one process), which adds complexity to container startup/shutdown.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;And there are more reasons. So, like the following diagram, it&#39;s best to run your app in multiple containers.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Use Docker Compose</title>
      <link>https://docker.qubitpi.org/get-started/workshop/08_using_compose/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docker.qubitpi.org/get-started/workshop/08_using_compose/</guid>
      <description>&lt;p&gt;&#xA;    &#xA;    &#xA;  &#xA;  &lt;a class=&#34;link&#34; href=&#34;https://docker.qubitpi.org/compose/&#34;&gt;Docker Compose&lt;/a&gt; is a tool that helps you define and&#xA;share multi-container applications. With Compose, you can create a YAML file to define the services&#xA;and with a single command, you can spin everything up or tear it all down.&lt;/p&gt;&#xA;&lt;p&gt;The big advantage of using Compose is you can define your application stack in a file, keep it at the root of&#xA;your project repository (it&#39;s now version controlled), and easily enable someone else to contribute to your project.&#xA;Someone would only need to clone your repository and start the app using Compose. In fact, you might see quite a few projects&#xA;on GitHub/GitLab doing exactly this now.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Image-building best practices</title>
      <link>https://docker.qubitpi.org/get-started/workshop/09_image_best/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docker.qubitpi.org/get-started/workshop/09_image_best/</guid>
      <description>&lt;h2 class=&#34; scroll-mt-20&#34; id=&#34;image-layering&#34;&gt;&#xA;  &lt;a class=&#34;text-black dark:text-white no-underline hover:underline&#34; href=&#34;#image-layering&#34;&gt;&#xA;    Image layering&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;Using the &lt;code&gt;docker image history&lt;/code&gt; command, you can see the command that was used&#xA;to create each layer within an image.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Use the &lt;code&gt;docker image history&lt;/code&gt; command to see the layers in the &lt;code&gt;getting-started&lt;/code&gt; image you&#xA;created.&lt;/p&gt;&#xA;&lt;div data-pagefind-ignore class=&#34;scroll-mt-20&#34; x-data x-ref=&#34;root&#34;&gt;&#xA;  &#xA;  &lt;div class=&#34;group relative&#34;&gt;&#xA;    &lt;button x-data=&#34;{ code: &#39;JCBkb2NrZXIgaW1hZ2UgaGlzdG9yeSBnZXR0aW5nLXN0YXJ0ZWQ=&#39;, copying: false }&#34;&#xA;      class=&#34;absolute right-3 top-3 z-10 text-gray-light-300 dark:text-gray-dark-600&#34; title=&#34;copy&#34; @click=&#34;window.navigator.clipboard.writeText(atob(code).replaceAll(/^[\$&gt;]\s+/gm, &#39;&#39;));&#xA;      copying = true;&#xA;      setTimeout(() =&gt; copying = false, 2000);&#34;&gt;&#xA;      &lt;span :class=&#34;{ &#39;group-hover:block&#39; : !copying }&#34; class=&#34;icon-svg hidden&#34;&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; width=&#34;48&#34; height=&#34;48&#34; viewBox=&#34;0 -960 960 960&#34;&gt;&lt;path d=&#34;M300-200q-24 0-42-18t-18-42v-560q0-24 18-42t42-18h440q24 0 42 18t18 42v560q0 24-18 42t-42 18H300ZM180-80q-24 0-42-18t-18-42v-590q0-13 8.5-21.5T150-760q13 0 21.5 8.5T180-730v590h470q13 0 21.5 8.5T680-110q0 13-8.5 21.5T650-80H180Z&#34;/&gt;&lt;/svg&gt;&lt;/span&gt;&#xA;      &lt;span :class=&#34;{ &#39;group-hover:block&#39; : copying }&#34; class=&#34;icon-svg hidden&#34;&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; width=&#34;48&#34; height=&#34;48&#34; viewBox=&#34;0 -960 960 960&#34;&gt;&lt;path d=&#34;m421-389-98-98q-9-9-22-9t-23 10q-9 9-9 22t9 22l122 123q9 9 21 9t21-9l239-239q10-10 10-23t-10-23q-10-9-23.5-8.5T635-603L421-389Zm59 309q-82 0-155-31.5t-127.5-86Q143-252 111.5-325T80-480q0-83 31.5-156t86-127Q252-817 325-848.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 82-31.5 155T763-197.5q-54 54.5-127 86T480-80Z&#34;/&gt;&lt;/svg&gt;&lt;/span&gt;&#xA;    &lt;/button&gt;&#xA;     &#xA;    &lt;div class=&#34;syntax-light dark:syntax-dark&#34;&gt;&#xA;      &#xA;        &lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; docker image &lt;span class=&#34;nb&#34;&gt;history&lt;/span&gt; getting-started&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;      &#xA;    &lt;/div&gt;&#xA;  &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt;You should get output that looks something like the following.&lt;/p&gt;</description>
    </item>
    <item>
      <title>What next after the Docker workshop</title>
      <link>https://docker.qubitpi.org/get-started/workshop/10_what_next/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docker.qubitpi.org/get-started/workshop/10_what_next/</guid>
      <description>&lt;p&gt;Although you&#39;re done with the workshop, there&#39;s still a lot more to learn about containers.&lt;/p&gt;&#xA;&lt;p&gt;Here are a few other areas to look at next.&lt;/p&gt;&#xA;&#xA;&lt;h2 class=&#34; scroll-mt-20&#34; id=&#34;container-orchestration&#34;&gt;&#xA;  &lt;a class=&#34;text-black dark:text-white no-underline hover:underline&#34; href=&#34;#container-orchestration&#34;&gt;&#xA;    Container orchestration&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;Running containers in production is tough. You don&#39;t want to log into a machine and simply run a&#xA;&lt;code&gt;docker run&lt;/code&gt; or &lt;code&gt;docker compose up&lt;/code&gt;. Why not? Well, what happens if the containers die? How do you&#xA;scale across several machines? Container orchestration solves this problem. Tools like Kubernetes,&#xA;Swarm, Nomad, and ECS all help solve this problem, all in slightly different ways.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
