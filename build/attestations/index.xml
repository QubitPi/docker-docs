<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Build attestations on Docker Docs</title>
    <link>https://docker.qubitpi.org/build/attestations/</link>
    <description>Recent content in Build attestations on Docker Docs</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="https://docker.qubitpi.org/build/attestations/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://docker.qubitpi.org/build/attestations/attestation-storage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docker.qubitpi.org/build/attestations/attestation-storage/</guid>
      <description>Image Attestation Storage Buildkit supports creating and attaching attestations to build artifacts. These attestations can provide valuable information from the build process, including, but not limited to: SBOMs, SLSA Provenance, build logs, etc.&#xA;This document describes the current custom format used to store attestations, which is designed to be compatible with current registry implementations today. In the future, we may support exporting attestations in additional formats.&#xA;Attestations are stored as manifest objects in the image index, similar in style to OCI artifacts.</description>
    </item>
    <item>
      <title></title>
      <link>https://docker.qubitpi.org/build/attestations/slsa-definitions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docker.qubitpi.org/build/attestations/slsa-definitions/</guid>
      <description>SLSA definitions BuildKit supports the creation of SLSA Provenance for builds that it runs.&#xA;The provenance format generated by BuildKit is defined by the SLSA Provenance format.&#xA;This page describes how BuildKit populate each field, and whether the field gets included when you generate attestations mode=min and mode=max.&#xA;builder.id Corresponds to SLSA builder.id.&#xA;Included with mode=min and mode=max.&#xA;The builder.id field is set to the URL of the build, if available.</description>
    </item>
    <item>
      <title>Provenance attestations</title>
      <link>https://docker.qubitpi.org/build/attestations/slsa-provenance/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docker.qubitpi.org/build/attestations/slsa-provenance/</guid>
      <description>The provenance attestations include facts about the build process, including details such as:&#xA;Build timestamps Build parameters and environment Version control metadata Source code details Materials (files, scripts) consumed during the build Provenance attestations follow the SLSA provenance schema, version 0.2.&#xA;For more information about how BuildKit populates these provenance properties, refer to SLSA definitions.&#xA;Create provenance attestations To create a provenance attestation, pass the --attest type=provenance option to the docker buildx build command:</description>
    </item>
    <item>
      <title>SBOM attestations</title>
      <link>https://docker.qubitpi.org/build/attestations/sbom/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docker.qubitpi.org/build/attestations/sbom/</guid>
      <description>Software Bill of Materials (SBOM) attestations describe what software artifacts an image contains, and artifacts used to create the image. Metadata included in an SBOM for describing software artifacts may include:&#xA;Name of the artifact Version License type Authors Unique package identifier There are benefits to indexing contents of an image during the build, as opposed to scanning a final image. When scanning happens as part of the build, you&#39;re able to detect software you use to build the image, that may not show up in the final image.</description>
    </item>
  </channel>
</rss>
