<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Swarm mode on Docker Docs</title>
    <link>https://docker.qubitpi.org/engine/swarm/</link>
    <description>Recent content in Swarm mode on Docker Docs</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="https://docker.qubitpi.org/engine/swarm/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Administer and maintain a swarm of Docker Engines</title>
      <link>https://docker.qubitpi.org/engine/swarm/admin_guide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docker.qubitpi.org/engine/swarm/admin_guide/</guid>
      <description>&lt;p&gt;When you run a swarm of Docker Engines, manager nodes are the key components&#xA;for managing the swarm and storing the swarm state. It is important to&#xA;understand some key features of manager nodes to properly deploy and&#xA;maintain the swarm.&lt;/p&gt;&#xA;&lt;p&gt;Refer to &#xA;  &lt;a class=&#34;link&#34; href=&#34;https://docker.qubitpi.org/engine/swarm/how-swarm-mode-works/nodes/&#34;&gt;How nodes work&lt;/a&gt;&#xA;for a brief overview of Docker Swarm mode and the difference between manager and&#xA;worker nodes.&lt;/p&gt;&#xA;&#xA;&lt;h2 class=&#34; scroll-mt-20&#34; id=&#34;operate-manager-nodes-in-a-swarm&#34;&gt;&#xA;  &lt;a class=&#34;text-black dark:text-white no-underline hover:underline&#34; href=&#34;#operate-manager-nodes-in-a-swarm&#34;&gt;&#xA;    Operate manager nodes in a swarm&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;Swarm manager nodes use the &#xA;  &lt;a class=&#34;link&#34; href=&#34;https://docker.qubitpi.org/engine/swarm/raft/&#34;&gt;Raft Consensus Algorithm&lt;/a&gt; to manage the&#xA;swarm state. You only need to understand some general concepts of Raft in&#xA;order to manage a swarm.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Deploy a stack to a swarm</title>
      <link>https://docker.qubitpi.org/engine/swarm/stack-deploy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docker.qubitpi.org/engine/swarm/stack-deploy/</guid>
      <description>&lt;p&gt;When running Docker Engine in swarm mode, you can use &lt;code&gt;docker stack deploy&lt;/code&gt; to&#xA;deploy a complete application stack to the swarm. The &lt;code&gt;deploy&lt;/code&gt; command accepts&#xA;a stack description in the form of a &#xA;    &#xA;    &#xA;  &#xA;  &lt;a class=&#34;link&#34; href=&#34;https://docker.qubitpi.org/reference/compose-file/legacy-versions/&#34;&gt;Compose file&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;  &#xA;&#xA;&#xA;  &lt;blockquote&#xA;    &#xA;    class=&#34;px-4 border-l-4 border-blue-light dark:border-blue-dark&#34;&gt;&#xA;    &lt;p class=&#34;flex gap-2 items-center text-blue-light dark:text-blue-dark&#34;&gt;&#xA;      &lt;span class=&#34;icon-svg pb-1&#34;&gt;&#xA;        &lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; width=&#34;48&#34; height=&#34;48&#34; viewBox=&#34;0 -960 960 960&#34;&gt;&lt;path d=&#34;M483.18-280q12.82 0 21.32-8.63 8.5-8.62 8.5-21.37v-180q0-12.75-8.68-21.38-8.67-8.62-21.5-8.62-12.82 0-21.32 8.62-8.5 8.63-8.5 21.38v180q0 12.75 8.68 21.37 8.67 8.63 21.5 8.63Zm-3.2-314q14.02 0 23.52-9.2T513-626q0-14.45-9.48-24.22-9.48-9.78-23.5-9.78t-23.52 9.78Q447-640.45 447-626q0 13.6 9.48 22.8 9.48 9.2 23.5 9.2Zm.29 514q-82.74 0-155.5-31.5Q252-143 197.5-197.5t-86-127.34Q80-397.68 80-480.5t31.5-155.66Q143-709 197.5-763t127.34-85.5Q397.68-880 480.5-880t155.66 31.5Q709-817 763-763t85.5 127Q880-563 880-480.27q0 82.74-31.5 155.5Q817-252 763-197.68q-54 54.31-127 86Q563-80 480.27-80Z&#34;/&gt;&lt;/svg&gt;&#xA;      &lt;/span&gt;&#xA;      &lt;strong&gt;Note&lt;/strong&gt;&#xA;    &lt;/p&gt;</description>
    </item>
    <item>
      <title>Deploy services to a swarm</title>
      <link>https://docker.qubitpi.org/engine/swarm/services/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docker.qubitpi.org/engine/swarm/services/</guid>
      <description>&lt;p&gt;Swarm services use a declarative model, which means that you define the&#xA;desired state of the service, and rely upon Docker to maintain this state. The&#xA;state includes information such as (but not limited to):&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The image name and tag the service containers should run&lt;/li&gt;&#xA;&lt;li&gt;How many containers participate in the service&lt;/li&gt;&#xA;&lt;li&gt;Whether any ports are exposed to clients outside the swarm&lt;/li&gt;&#xA;&lt;li&gt;Whether the service should start automatically when Docker starts&lt;/li&gt;&#xA;&lt;li&gt;The specific behavior that happens when the service is restarted (such as&#xA;whether a rolling restart is used)&lt;/li&gt;&#xA;&lt;li&gt;Characteristics of the nodes where the service can run (such as resource&#xA;constraints and placement preferences)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;For an overview of Swarm mode, see &#xA;  &lt;a class=&#34;link&#34; href=&#34;https://docker.qubitpi.org/engine/swarm/key-concepts/&#34;&gt;Swarm mode key concepts&lt;/a&gt;.&#xA;For an overview of how services work, see&#xA;&#xA;  &lt;a class=&#34;link&#34; href=&#34;https://docker.qubitpi.org/engine/swarm/how-swarm-mode-works/services/&#34;&gt;How services work&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Join nodes to a swarm</title>
      <link>https://docker.qubitpi.org/engine/swarm/join-nodes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docker.qubitpi.org/engine/swarm/join-nodes/</guid>
      <description>&lt;p&gt;When you first create a swarm, you place a single Docker Engine into&#xA;Swarm mode. To take full advantage of Swarm mode you can add nodes to the swarm:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Adding worker nodes increases capacity. When you deploy a service to a swarm,&#xA;the engine schedules tasks on available nodes whether they are worker nodes or&#xA;manager nodes. When you add workers to your swarm, you increase the scale of&#xA;the swarm to handle tasks without affecting the manager raft consensus.&lt;/li&gt;&#xA;&lt;li&gt;Manager nodes increase fault-tolerance. Manager nodes perform the&#xA;orchestration and cluster management functions for the swarm. Among manager&#xA;nodes, a single leader node conducts orchestration tasks. If a leader node&#xA;goes down, the remaining manager nodes elect a new leader and resume&#xA;orchestration and maintenance of the swarm state. By default, manager nodes&#xA;also run tasks.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Docker Engine joins the swarm depending on the &lt;strong&gt;join-token&lt;/strong&gt; you provide to&#xA;the &lt;code&gt;docker swarm join&lt;/code&gt; command. The node only uses the token at join time. If&#xA;you subsequently rotate the token, it doesn&#39;t affect existing swarm nodes. Refer&#xA;to &#xA;  &lt;a class=&#34;link&#34; href=&#34;https://docker.qubitpi.org/engine/swarm/swarm-mode/#view-the-join-command-or-update-a-swarm-join-token&#34;&gt;Run Docker Engine in swarm mode&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Lock your swarm to protect its encryption key</title>
      <link>https://docker.qubitpi.org/engine/swarm/swarm_manager_locking/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docker.qubitpi.org/engine/swarm/swarm_manager_locking/</guid>
      <description>&lt;p&gt;The Raft logs used by swarm managers are encrypted on disk by default. This at-rest&#xA;encryption protects your service&#39;s configuration and data from attackers who gain&#xA;access to the encrypted Raft logs. One of the reasons this feature was introduced&#xA;was in support of the &#xA;  &lt;a class=&#34;link&#34; href=&#34;https://docker.qubitpi.org/engine/swarm/secrets/&#34;&gt;Docker secrets&lt;/a&gt; feature.&lt;/p&gt;&#xA;&lt;p&gt;When Docker restarts, both the TLS key used to encrypt communication among swarm&#xA;nodes and the key used to encrypt and decrypt Raft logs on disk are loaded&#xA;into each manager node&#39;s memory. Docker has the ability to protect the mutual TLS&#xA;encryption key and the key used to encrypt and decrypt Raft logs at rest, by&#xA;allowing you to take ownership of these keys and to require manual unlocking of&#xA;your managers. This feature is called autolock.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Manage nodes in a swarm</title>
      <link>https://docker.qubitpi.org/engine/swarm/manage-nodes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docker.qubitpi.org/engine/swarm/manage-nodes/</guid>
      <description>&lt;p&gt;As part of the swarm management lifecycle, you may need to:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;  &lt;a class=&#34;link&#34; href=&#34;#list-nodes&#34;&gt;List nodes in the swarm&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;  &lt;a class=&#34;link&#34; href=&#34;#inspect-an-individual-node&#34;&gt;Inspect an individual node&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;  &lt;a class=&#34;link&#34; href=&#34;#update-a-node&#34;&gt;Update a node&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;  &lt;a class=&#34;link&#34; href=&#34;#leave-the-swarm&#34;&gt;Leave the swarm&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;h2 class=&#34; scroll-mt-20&#34; id=&#34;list-nodes&#34;&gt;&#xA;  &lt;a class=&#34;text-black dark:text-white no-underline hover:underline&#34; href=&#34;#list-nodes&#34;&gt;&#xA;    List nodes&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;To view a list of nodes in the swarm run &lt;code&gt;docker node ls&lt;/code&gt; from a manager node:&lt;/p&gt;&#xA;&lt;div data-pagefind-ignore class=&#34;scroll-mt-20&#34; x-data x-ref=&#34;root&#34;&gt;&#xA;  &#xA;  &lt;div class=&#34;group relative&#34;&gt;&#xA;    &lt;button x-data=&#34;{ code: &#39;JCBkb2NrZXIgbm9kZSBscwoKSUQgICAgICAgICAgICAgICAgICAgICAgICAgICBIT1NUTkFNRSAgU1RBVFVTICBBVkFJTEFCSUxJVFkgIE1BTkFHRVIgU1RBVFVTCjQ2YXFyazRlNDczaGpidDc0NXo1M2NyM3QgICAgbm9kZS01ICAgIFJlYWR5ICAgQWN0aXZlICAgICAgICBSZWFjaGFibGUKNjFwaTNkOTFzMHczYjkwaWp3M2RlZWIycSAgICBub2RlLTQgICAgUmVhZHkgICBBY3RpdmUgICAgICAgIFJlYWNoYWJsZQphNWIybTNvZ2hkNDhtOGV1MzkxcGVmcTV1ICAgIG5vZGUtMyAgICBSZWFkeSAgIEFjdGl2ZQplN3A4YnR4ZXUzaW9zaHl1ajZseGl2NmcwICAgIG5vZGUtMiAgICBSZWFkeSAgIEFjdGl2ZQplaGt2M2JjaW1hZ2Rlc2U3OWRuNzhvdGo1ICogIG5vZGUtMSAgICBSZWFkeSAgIEFjdGl2ZSAgICAgICAgTGVhZGVy&#39;, copying: false }&#34;&#xA;      class=&#34;absolute right-3 top-3 z-10 text-gray-light-300 dark:text-gray-dark-600&#34; title=&#34;copy&#34; @click=&#34;window.navigator.clipboard.writeText(atob(code).replaceAll(/^[\$&gt;]\s+/gm, &#39;&#39;));&#xA;      copying = true;&#xA;      setTimeout(() =&gt; copying = false, 2000);&#34;&gt;&#xA;      &lt;span :class=&#34;{ &#39;group-hover:block&#39; : !copying }&#34; class=&#34;icon-svg hidden&#34;&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; width=&#34;48&#34; height=&#34;48&#34; viewBox=&#34;0 -960 960 960&#34;&gt;&lt;path d=&#34;M300-200q-24 0-42-18t-18-42v-560q0-24 18-42t42-18h440q24 0 42 18t18 42v560q0 24-18 42t-42 18H300ZM180-80q-24 0-42-18t-18-42v-590q0-13 8.5-21.5T150-760q13 0 21.5 8.5T180-730v590h470q13 0 21.5 8.5T680-110q0 13-8.5 21.5T650-80H180Z&#34;/&gt;&lt;/svg&gt;&lt;/span&gt;&#xA;      &lt;span :class=&#34;{ &#39;group-hover:block&#39; : copying }&#34; class=&#34;icon-svg hidden&#34;&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; width=&#34;48&#34; height=&#34;48&#34; viewBox=&#34;0 -960 960 960&#34;&gt;&lt;path d=&#34;m421-389-98-98q-9-9-22-9t-23 10q-9 9-9 22t9 22l122 123q9 9 21 9t21-9l239-239q10-10 10-23t-10-23q-10-9-23.5-8.5T635-603L421-389Zm59 309q-82 0-155-31.5t-127.5-86Q143-252 111.5-325T80-480q0-83 31.5-156t86-127Q252-817 325-848.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 82-31.5 155T763-197.5q-54 54.5-127 86T480-80Z&#34;/&gt;&lt;/svg&gt;&lt;/span&gt;&#xA;    &lt;/button&gt;&#xA;     &#xA;    &lt;div class=&#34;syntax-light dark:syntax-dark&#34;&gt;&#xA;      &#xA;        &lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; docker node ls&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;ID                           HOSTNAME  STATUS  AVAILABILITY  MANAGER STATUS&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;46aqrk4e473hjbt745z53cr3t    node-5    Ready   Active        Reachable&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;61pi3d91s0w3b90ijw3deeb2q    node-4    Ready   Active        Reachable&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;a5b2m3oghd48m8eu391pefq5u    node-3    Ready   Active&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;e7p8btxeu3ioshyuj6lxiv6g0    node-2    Ready   Active&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;ehkv3bcimagdese79dn78otj5 *  node-1    Ready   Active        Leader&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;      &#xA;    &lt;/div&gt;&#xA;  &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt;The &lt;code&gt;AVAILABILITY&lt;/code&gt; column shows whether or not the scheduler can assign tasks to&#xA;the node:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Manage sensitive data with Docker secrets</title>
      <link>https://docker.qubitpi.org/engine/swarm/secrets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docker.qubitpi.org/engine/swarm/secrets/</guid>
      <description>&lt;h2 class=&#34; scroll-mt-20&#34; id=&#34;about-secrets&#34;&gt;&#xA;  &lt;a class=&#34;text-black dark:text-white no-underline hover:underline&#34; href=&#34;#about-secrets&#34;&gt;&#xA;    About secrets&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;In terms of Docker Swarm services, a &lt;em&gt;secret&lt;/em&gt; is a blob of data, such as a&#xA;password, SSH private key, SSL certificate, or another piece of data that should&#xA;not be transmitted over a network or stored unencrypted in a Dockerfile or in&#xA;your application&#39;s source code. You can use Docker &lt;em&gt;secrets&lt;/em&gt; to centrally manage&#xA;this data and securely transmit it to only those containers that need access to&#xA;it. Secrets are encrypted during transit and at rest in a Docker swarm. A given&#xA;secret is only accessible to those services which have been granted explicit&#xA;access to it, and only while those service tasks are running.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Manage swarm service networks</title>
      <link>https://docker.qubitpi.org/engine/swarm/networking/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docker.qubitpi.org/engine/swarm/networking/</guid>
      <description>&lt;p&gt;This page describes networking for swarm services.&lt;/p&gt;&#xA;&#xA;&lt;h2 class=&#34; scroll-mt-20&#34; id=&#34;swarm-and-types-of-traffic&#34;&gt;&#xA;  &lt;a class=&#34;text-black dark:text-white no-underline hover:underline&#34; href=&#34;#swarm-and-types-of-traffic&#34;&gt;&#xA;    Swarm and types of traffic&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;A Docker swarm generates two different kinds of traffic:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Control and management plane traffic: This includes swarm management&#xA;messages, such as requests to join or leave the swarm. This traffic is&#xA;always encrypted.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Application data plane traffic: This includes container traffic and&#xA;traffic to and from external clients.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;h2 class=&#34; scroll-mt-20&#34; id=&#34;key-network-concepts&#34;&gt;&#xA;  &lt;a class=&#34;text-black dark:text-white no-underline hover:underline&#34; href=&#34;#key-network-concepts&#34;&gt;&#xA;    Key network concepts&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;The following three network concepts are important to swarm services:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Raft consensus in swarm mode</title>
      <link>https://docker.qubitpi.org/engine/swarm/raft/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docker.qubitpi.org/engine/swarm/raft/</guid>
      <description>&lt;p&gt;When Docker Engine runs in Swarm mode, manager nodes implement the&#xA;&#xA;  &lt;a&#xA;    class=&#34;link&#34;&#xA;    href=&#34;http://thesecretlivesofdata.com/raft/&#34;&#xA;    rel=&#34;noopener&#34;&gt;Raft Consensus Algorithm&lt;span class=&#34;pl-1 icon-svg icon-sm&#34;&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; width=&#34;48&#34; height=&#34;48&#34; viewBox=&#34;0 -960 960 960&#34;&gt;&lt;path d=&#34;M180-120q-24 0-42-18t-18-42v-600q0-24 18-42t42-18h249q12.75 0 21.38 8.68 8.62 8.67 8.62 21.5 0 12.82-8.62 21.32-8.63 8.5-21.38 8.5H180v600h600v-249q0-12.75 8.68-21.38 8.67-8.62 21.5-8.62 12.82 0 21.32 8.62 8.5 8.63 8.5 21.38v249q0 24-18 42t-42 18H180Zm600-617L403-360q-9 9-21 8.5t-21-9.5q-9-9-9-21t9-21l377-377H549q-12.75 0-21.37-8.68-8.63-8.67-8.63-21.5 0-12.82 8.63-21.32 8.62-8.5 21.37-8.5h261q12.75 0 21.38 8.62Q840-822.75 840-810v261q0 12.75-8.68 21.37-8.67 8.63-21.5 8.63-12.82 0-21.32-8.63-8.5-8.62-8.5-21.37v-188Z&#34;/&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/a&gt; to manage the global cluster state.&lt;/p&gt;&#xA;&lt;p&gt;The reason why Swarm mode is using a consensus algorithm is to make sure that&#xA;all the manager nodes that are in charge of managing and scheduling tasks in the cluster&#xA;are storing the same consistent state.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Run Docker Engine in swarm mode</title>
      <link>https://docker.qubitpi.org/engine/swarm/swarm-mode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docker.qubitpi.org/engine/swarm/swarm-mode/</guid>
      <description>&lt;p&gt;When you first install and start working with Docker Engine, Swarm mode is&#xA;disabled by default. When you enable Swarm mode, you work with the concept of&#xA;services managed through the &lt;code&gt;docker service&lt;/code&gt; command.&lt;/p&gt;&#xA;&lt;p&gt;There are two ways to run the engine in Swarm mode:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Create a new swarm, covered in this article.&lt;/li&gt;&#xA;&lt;li&gt;&#xA;  &lt;a class=&#34;link&#34; href=&#34;https://docker.qubitpi.org/engine/swarm/join-nodes/&#34;&gt;Join an existing swarm&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;When you run the engine in Swarm mode on your local machine, you can create and&#xA;test services based upon images you&#39;ve created or other available images. In&#xA;your production environment, Swarm mode provides a fault-tolerant platform with&#xA;cluster management features to keep your services running and available.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Store configuration data using Docker Configs</title>
      <link>https://docker.qubitpi.org/engine/swarm/configs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docker.qubitpi.org/engine/swarm/configs/</guid>
      <description>&lt;h2 class=&#34; scroll-mt-20&#34; id=&#34;about-configs&#34;&gt;&#xA;  &lt;a class=&#34;text-black dark:text-white no-underline hover:underline&#34; href=&#34;#about-configs&#34;&gt;&#xA;    About configs&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;Docker swarm service configs  allow you to store non-sensitive information,&#xA;such as configuration files, outside a service&#39;s image or running containers.&#xA;This allows you to keep your images as generic as possible, without the need to&#xA;bind-mount configuration files into the containers or use environment variables.&lt;/p&gt;&#xA;&lt;p&gt;Configs operate in a similar way to &#xA;  &lt;a class=&#34;link&#34; href=&#34;https://docker.qubitpi.org/engine/swarm/secrets/&#34;&gt;secrets&lt;/a&gt;, except that they are&#xA;not encrypted at rest and are mounted directly into the container&#39;s filesystem&#xA;without the use of RAM disks. Configs can be added or removed from a service at&#xA;any time, and services can share a config. You can even use configs in&#xA;conjunction with environment variables or labels, for maximum flexibility.&#xA;Config values can be generic strings or binary content (up to 500 kb in size).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Swarm mode key concepts</title>
      <link>https://docker.qubitpi.org/engine/swarm/key-concepts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docker.qubitpi.org/engine/swarm/key-concepts/</guid>
      <description>&lt;p&gt;This topic introduces some of the concepts unique to the cluster management and&#xA;orchestration features of Docker Engine 1.12.&lt;/p&gt;&#xA;&#xA;&lt;h2 class=&#34; scroll-mt-20&#34; id=&#34;what-is-a-swarm&#34;&gt;&#xA;  &lt;a class=&#34;text-black dark:text-white no-underline hover:underline&#34; href=&#34;#what-is-a-swarm&#34;&gt;&#xA;    What is a swarm?&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;The cluster management and orchestration features embedded in Docker Engine&#xA;are built using &#xA;  &lt;a&#xA;    class=&#34;link&#34;&#xA;    href=&#34;https://github.com/docker/swarmkit/&#34;&#xA;    rel=&#34;noopener&#34;&gt;swarmkit&lt;span class=&#34;pl-1 icon-svg icon-sm&#34;&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; width=&#34;48&#34; height=&#34;48&#34; viewBox=&#34;0 -960 960 960&#34;&gt;&lt;path d=&#34;M180-120q-24 0-42-18t-18-42v-600q0-24 18-42t42-18h249q12.75 0 21.38 8.68 8.62 8.67 8.62 21.5 0 12.82-8.62 21.32-8.63 8.5-21.38 8.5H180v600h600v-249q0-12.75 8.68-21.38 8.67-8.62 21.5-8.62 12.82 0 21.32 8.62 8.5 8.63 8.5 21.38v249q0 24-18 42t-42 18H180Zm600-617L403-360q-9 9-21 8.5t-21-9.5q-9-9-9-21t9-21l377-377H549q-12.75 0-21.37-8.68-8.63-8.67-8.63-21.5 0-12.82 8.63-21.32 8.62-8.5 21.37-8.5h261q12.75 0 21.38 8.62Q840-822.75 840-810v261q0 12.75-8.68 21.37-8.67 8.63-21.5 8.63-12.82 0-21.32-8.63-8.5-8.62-8.5-21.37v-188Z&#34;/&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/a&gt;. Swarmkit is a&#xA;separate project which implements Docker&#39;s orchestration layer and is used&#xA;directly within Docker.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Use Swarm mode routing mesh</title>
      <link>https://docker.qubitpi.org/engine/swarm/ingress/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docker.qubitpi.org/engine/swarm/ingress/</guid>
      <description>&lt;p&gt;Docker Engine Swarm mode makes it easy to publish ports for services to make&#xA;them available to resources outside the swarm. All nodes participate in an&#xA;ingress routing mesh. The routing mesh enables each node in the swarm to&#xA;accept connections on published ports for any service running in the swarm, even&#xA;if there&#39;s no task running on the node. The routing mesh routes all&#xA;incoming requests to published ports on available nodes to an active container.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
