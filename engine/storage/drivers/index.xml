<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Storage drivers on Docker Docs</title>
    <link>https://docker.qubitpi.org/engine/storage/drivers/</link>
    <description>Recent content in Storage drivers on Docker Docs</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="https://docker.qubitpi.org/engine/storage/drivers/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Select a storage driver</title>
      <link>https://docker.qubitpi.org/engine/storage/drivers/select-storage-driver/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docker.qubitpi.org/engine/storage/drivers/select-storage-driver/</guid>
      <description>&lt;p&gt;Ideally, very little data is written to a container&#39;s writable layer, and you&#xA;use Docker volumes to write data. However, some workloads require you to be able&#xA;to write to the container&#39;s writable layer. This is where storage drivers come&#xA;in.&lt;/p&gt;&#xA;&lt;p&gt;Docker supports several storage drivers, using a pluggable architecture. The&#xA;storage driver controls how images and containers are stored and managed on your&#xA;Docker host. After you have read the &#xA;  &lt;a class=&#34;link&#34; href=&#34;https://docker.qubitpi.org/engine/storage/drivers/&#34;&gt;storage driver overview&lt;/a&gt;, the&#xA;next step is to choose the best storage driver for your workloads. Use the storage&#xA;driver with the best overall performance and stability in the most usual scenarios.&lt;/p&gt;</description>
    </item>
    <item>
      <title>AUFS storage driver</title>
      <link>https://docker.qubitpi.org/engine/storage/drivers/aufs-driver/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docker.qubitpi.org/engine/storage/drivers/aufs-driver/</guid>
      <description>&lt;blockquote&#xA;  &#xA;  class=&#34;px-4 border-l-4 text-gray-light dark:text-gray-dark&#34;&gt;&#xA;    &lt;p&gt;&lt;strong&gt;Deprecated&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;The AuFS storage driver has been deprecated, and is removed in Docker Engine&#xA;v24.0. If you are using AufS, you must migrate to a supported storage driver&#xA;before upgrading to Docker Engine v24.0. Read the &#xA;  &lt;a class=&#34;link&#34; href=&#34;https://docker.qubitpi.org/engine/storage/drivers/select-storage-driver/&#34;&gt;Docker storage drivers&lt;/a&gt;&#xA;page for supported storage drivers.&lt;/p&gt;&#xA;&#xA;  &lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;AUFS is a &lt;em&gt;union filesystem&lt;/em&gt;. The &lt;code&gt;aufs&lt;/code&gt; storage driver was previously the default&#xA;storage driver used for managing images and layers on Docker for Ubuntu, and for&#xA;Debian versions prior to Stretch. If your Linux kernel is version 4.0 or higher,&#xA;and you use Docker Engine - Community, consider using the newer&#xA;&#xA;  &lt;a class=&#34;link&#34; href=&#34;https://docker.qubitpi.org/engine/storage/drivers/overlayfs-driver/&#34;&gt;overlay2&lt;/a&gt;, which has&#xA;potential performance advantages over the &lt;code&gt;aufs&lt;/code&gt; storage driver.&lt;/p&gt;</description>
    </item>
    <item>
      <title>BTRFS storage driver</title>
      <link>https://docker.qubitpi.org/engine/storage/drivers/btrfs-driver/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docker.qubitpi.org/engine/storage/drivers/btrfs-driver/</guid>
      <description>&lt;p&gt;Btrfs is a copy-on-write filesystem that supports many advanced storage&#xA;technologies, making it a good fit for Docker. Btrfs is included in the&#xA;mainline Linux kernel.&lt;/p&gt;&#xA;&lt;p&gt;Docker&#39;s &lt;code&gt;btrfs&lt;/code&gt; storage driver leverages many Btrfs features for image and&#xA;container management. Among these features are block-level operations, thin&#xA;provisioning, copy-on-write snapshots, and ease of administration. You can&#xA;combine multiple physical block devices into a single Btrfs filesystem.&lt;/p&gt;&#xA;&lt;p&gt;This page refers to Docker&#39;s Btrfs storage driver as &lt;code&gt;btrfs&lt;/code&gt; and the overall&#xA;Btrfs Filesystem as Btrfs.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Device Mapper storage driver (deprecated)</title>
      <link>https://docker.qubitpi.org/engine/storage/drivers/device-mapper-driver/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docker.qubitpi.org/engine/storage/drivers/device-mapper-driver/</guid>
      <description>&lt;blockquote&#xA;  &#xA;  class=&#34;px-4 border-l-4 text-gray-light dark:text-gray-dark&#34;&gt;&#xA;    &lt;p&gt;&lt;strong&gt;Deprecated&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;The Device Mapper driver &#xA;    &#xA;    &#xA;  &#xA;  &lt;a class=&#34;link&#34; href=&#34;https://docker.qubitpi.org/engine/deprecated/#device-mapper-storage-driver&#34;&gt;has been deprecated&lt;/a&gt;,&#xA;and is removed in Docker Engine v25.0. If you are using Device Mapper,&#xA;you must migrate to a supported storage driver before upgrading to Docker&#xA;Engine v25.0. Read the &#xA;  &lt;a class=&#34;link&#34; href=&#34;https://docker.qubitpi.org/engine/storage/drivers/select-storage-driver/&#34;&gt;Docker storage drivers&lt;/a&gt;&#xA;page for supported storage drivers.&lt;/p&gt;&#xA;&#xA;  &lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Device Mapper is a kernel-based framework that underpins many advanced&#xA;volume management technologies on Linux. Docker&#39;s &lt;code&gt;devicemapper&lt;/code&gt; storage driver&#xA;leverages the thin provisioning and snapshotting capabilities of this framework&#xA;for image and container management. This article refers to the Device Mapper&#xA;storage driver as &lt;code&gt;devicemapper&lt;/code&gt;, and the kernel framework as &lt;em&gt;Device Mapper&lt;/em&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>OverlayFS storage driver</title>
      <link>https://docker.qubitpi.org/engine/storage/drivers/overlayfs-driver/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docker.qubitpi.org/engine/storage/drivers/overlayfs-driver/</guid>
      <description>&lt;p&gt;OverlayFS is a union filesystem.&lt;/p&gt;&#xA;&lt;p&gt;This page refers to the Linux kernel driver as &lt;code&gt;OverlayFS&lt;/code&gt; and to the Docker&#xA;storage driver as &lt;code&gt;overlay2&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;  &lt;blockquote&#xA;    &#xA;    class=&#34;px-4 border-l-4 border-blue-light dark:border-blue-dark&#34;&gt;&#xA;    &lt;p class=&#34;flex gap-2 items-center text-blue-light dark:text-blue-dark&#34;&gt;&#xA;      &lt;span class=&#34;icon-svg pb-1&#34;&gt;&#xA;        &lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; width=&#34;48&#34; height=&#34;48&#34; viewBox=&#34;0 -960 960 960&#34;&gt;&lt;path d=&#34;M483.18-280q12.82 0 21.32-8.63 8.5-8.62 8.5-21.37v-180q0-12.75-8.68-21.38-8.67-8.62-21.5-8.62-12.82 0-21.32 8.62-8.5 8.63-8.5 21.38v180q0 12.75 8.68 21.37 8.67 8.63 21.5 8.63Zm-3.2-314q14.02 0 23.52-9.2T513-626q0-14.45-9.48-24.22-9.48-9.78-23.5-9.78t-23.52 9.78Q447-640.45 447-626q0 13.6 9.48 22.8 9.48 9.2 23.5 9.2Zm.29 514q-82.74 0-155.5-31.5Q252-143 197.5-197.5t-86-127.34Q80-397.68 80-480.5t31.5-155.66Q143-709 197.5-763t127.34-85.5Q397.68-880 480.5-880t155.66 31.5Q709-817 763-763t85.5 127Q880-563 880-480.27q0 82.74-31.5 155.5Q817-252 763-197.68q-54 54.31-127 86Q563-80 480.27-80Z&#34;/&gt;&lt;/svg&gt;&#xA;      &lt;/span&gt;&#xA;      &lt;strong&gt;Note&lt;/strong&gt;&#xA;    &lt;/p&gt;</description>
    </item>
    <item>
      <title>VFS storage driver</title>
      <link>https://docker.qubitpi.org/engine/storage/drivers/vfs-driver/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docker.qubitpi.org/engine/storage/drivers/vfs-driver/</guid>
      <description>&lt;p&gt;The VFS storage driver isn&#39;t a union filesystem. Each layer is a&#xA;directory on disk, and there is no copy-on-write support. To create a new&#xA;layer, a &amp;quot;deep copy&amp;quot; is done of the previous layer. This leads to lower&#xA;performance and more space used on disk than other storage drivers. However, it&#xA;is robust, stable, and works in every environment. It can also be used as a&#xA;mechanism to verify other storage back-ends against, in a testing environment.&lt;/p&gt;</description>
    </item>
    <item>
      <title>windowsfilter storage driver</title>
      <link>https://docker.qubitpi.org/engine/storage/drivers/windowsfilter-driver/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docker.qubitpi.org/engine/storage/drivers/windowsfilter-driver/</guid>
      <description>&lt;p&gt;The windowsfilter storage driver is the default storage driver for Docker&#xA;Engine on Windows. The windowsfilter driver uses Windows-native file system&#xA;layers to for storing Docker layers and volume data on disk. The windowsfilter&#xA;storage driver only works on file systems formatted with NTFS.&lt;/p&gt;&#xA;&#xA;&lt;h2 class=&#34; scroll-mt-20&#34; id=&#34;configure-the-windowsfilter-storage-driver&#34;&gt;&#xA;  &lt;a class=&#34;text-black dark:text-white no-underline hover:underline&#34; href=&#34;#configure-the-windowsfilter-storage-driver&#34;&gt;&#xA;    Configure the windowsfilter storage driver&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;For most use case, no configuring the windowsfilter storage driver is not&#xA;necessary.&lt;/p&gt;&#xA;&lt;p&gt;The default storage limit for Docker Engine on Windows is 127GB. To use a&#xA;different storage size, set the &lt;code&gt;size&lt;/code&gt; option for the windowsfilter storage&#xA;driver. See &#xA;    &#xA;    &#xA;  &#xA;  &lt;a class=&#34;link&#34; href=&#34;https://docker.qubitpi.org/reference/cli/dockerd/#windowsfilter-options&#34;&gt;windowsfilter options&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>ZFS storage driver</title>
      <link>https://docker.qubitpi.org/engine/storage/drivers/zfs-driver/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docker.qubitpi.org/engine/storage/drivers/zfs-driver/</guid>
      <description>&lt;p&gt;ZFS is a next generation filesystem that supports many advanced storage&#xA;technologies such as volume management, snapshots, checksumming, compression and&#xA;deduplication, replication and more.&lt;/p&gt;&#xA;&lt;p&gt;It was created by Sun Microsystems (now Oracle Corporation) and is open sourced&#xA;under the CDDL license. Due to licensing incompatibilities between the CDDL and&#xA;GPL, ZFS cannot be shipped as part of the mainline Linux kernel. However, the&#xA;ZFS On Linux (ZoL) project provides an out-of-tree kernel module and userspace&#xA;tools which can be installed separately.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
