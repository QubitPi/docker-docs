<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Content trust in Docker on Docker Docs</title>
    <link>https://docker.qubitpi.org/engine/security/trust/</link>
    <description>Recent content in Content trust in Docker on Docker Docs</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="https://docker.qubitpi.org/engine/security/trust/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Automation with content trust</title>
      <link>https://docker.qubitpi.org/engine/security/trust/trust_automation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docker.qubitpi.org/engine/security/trust/trust_automation/</guid>
      <description>&lt;p&gt;It is very common for Docker Content Trust to be built into existing automation&#xA;systems. To allow tools to wrap Docker and push trusted content, there are&#xA;environment variables that can be passed through to the client.&lt;/p&gt;&#xA;&lt;p&gt;This guide follows the steps as described in&#xA;&#xA;  &lt;a class=&#34;link&#34; href=&#34;https://docker.qubitpi.org/engine/security/trust/#signing-images-with-docker-content-trust&#34;&gt;Signing images with Docker Content Trust&lt;/a&gt;. Make sure you understand and follow the prerequisites.&lt;/p&gt;&#xA;&lt;p&gt;When working directly with the Notary client, it uses its &#xA;  &lt;a&#xA;    class=&#34;link&#34;&#xA;    href=&#34;https://github.com/theupdateframework/notary/blob/master/docs/reference/client-config.md#environment-variables-optional&#34;&#xA;    rel=&#34;noopener&#34;&gt;own set of environment variables&lt;span class=&#34;pl-1 icon-svg icon-sm&#34;&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; width=&#34;48&#34; height=&#34;48&#34; viewBox=&#34;0 -960 960 960&#34;&gt;&lt;path d=&#34;M180-120q-24 0-42-18t-18-42v-600q0-24 18-42t42-18h249q12.75 0 21.38 8.68 8.62 8.67 8.62 21.5 0 12.82-8.62 21.32-8.63 8.5-21.38 8.5H180v600h600v-249q0-12.75 8.68-21.38 8.67-8.62 21.5-8.62 12.82 0 21.32 8.62 8.5 8.63 8.5 21.38v249q0 24-18 42t-42 18H180Zm600-617L403-360q-9 9-21 8.5t-21-9.5q-9-9-9-21t9-21l377-377H549q-12.75 0-21.37-8.68-8.63-8.67-8.63-21.5 0-12.82 8.63-21.32 8.62-8.5 21.37-8.5h261q12.75 0 21.38 8.62Q840-822.75 840-810v261q0 12.75-8.68 21.37-8.67 8.63-21.5 8.63-12.82 0-21.32-8.63-8.5-8.62-8.5-21.37v-188Z&#34;/&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Delegations for content trust</title>
      <link>https://docker.qubitpi.org/engine/security/trust/trust_delegation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docker.qubitpi.org/engine/security/trust/trust_delegation/</guid>
      <description>&lt;p&gt;Delegations in Docker Content Trust (DCT) allow you to control who can and cannot sign&#xA;an image tag. A delegation will have a pair of private and public delegation keys. A delegation&#xA;could contain multiple pairs of keys and contributors in order to a) allow multiple users&#xA;to be part of a delegation, and b) to support key rotation.&lt;/p&gt;&#xA;&lt;p&gt;The most important delegation within Docker Content Trust is &lt;code&gt;targets/releases&lt;/code&gt;.&#xA;This is seen as the canonical source of a trusted image tag, and without a&#xA;contributor&#39;s key being under this delegation, they will be unable to sign a tag.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Deploy Notary Server with Compose</title>
      <link>https://docker.qubitpi.org/engine/security/trust/deploying_notary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docker.qubitpi.org/engine/security/trust/deploying_notary/</guid>
      <description>&lt;p&gt;The easiest way to deploy Notary Server is by using Docker Compose. To follow the procedure on this page, you must have already &#xA;    &#xA;    &#xA;  &#xA;  &lt;a class=&#34;link&#34; href=&#34;https://docker.qubitpi.org/compose/install/&#34;&gt;installed Docker Compose&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Clone the Notary repository.&lt;/p&gt;&#xA;&lt;div data-pagefind-ignore class=&#34;scroll-mt-20&#34; x-data x-ref=&#34;root&#34;&gt;&#xA;  &#xA;  &lt;div class=&#34;group relative&#34;&gt;&#xA;    &lt;button x-data=&#34;{ code: &#39;JCBnaXQgY2xvbmUgaHR0cHM6Ly9naXRodWIuY29tL3RoZXVwZGF0ZWZyYW1ld29yay9ub3RhcnkuZ2l0&#39;, copying: false }&#34;&#xA;      class=&#34;absolute right-3 top-3 z-10 text-gray-light-300 dark:text-gray-dark-600&#34; title=&#34;copy&#34; @click=&#34;window.navigator.clipboard.writeText(atob(code).replaceAll(/^[\$&gt;]\s+/gm, &#39;&#39;));&#xA;      copying = true;&#xA;      setTimeout(() =&gt; copying = false, 2000);&#34;&gt;&#xA;      &lt;span :class=&#34;{ &#39;group-hover:block&#39; : !copying }&#34; class=&#34;icon-svg hidden&#34;&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; width=&#34;48&#34; height=&#34;48&#34; viewBox=&#34;0 -960 960 960&#34;&gt;&lt;path d=&#34;M300-200q-24 0-42-18t-18-42v-560q0-24 18-42t42-18h440q24 0 42 18t18 42v560q0 24-18 42t-42 18H300ZM180-80q-24 0-42-18t-18-42v-590q0-13 8.5-21.5T150-760q13 0 21.5 8.5T180-730v590h470q13 0 21.5 8.5T680-110q0 13-8.5 21.5T650-80H180Z&#34;/&gt;&lt;/svg&gt;&lt;/span&gt;&#xA;      &lt;span :class=&#34;{ &#39;group-hover:block&#39; : copying }&#34; class=&#34;icon-svg hidden&#34;&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; width=&#34;48&#34; height=&#34;48&#34; viewBox=&#34;0 -960 960 960&#34;&gt;&lt;path d=&#34;m421-389-98-98q-9-9-22-9t-23 10q-9 9-9 22t9 22l122 123q9 9 21 9t21-9l239-239q10-10 10-23t-10-23q-10-9-23.5-8.5T635-603L421-389Zm59 309q-82 0-155-31.5t-127.5-86Q143-252 111.5-325T80-480q0-83 31.5-156t86-127Q252-817 325-848.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 82-31.5 155T763-197.5q-54 54.5-127 86T480-80Z&#34;/&gt;&lt;/svg&gt;&lt;/span&gt;&#xA;    &lt;/button&gt;&#xA;     &#xA;    &lt;div class=&#34;syntax-light dark:syntax-dark&#34;&gt;&#xA;      &#xA;        &lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; git clone https://github.com/theupdateframework/notary.git&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;      &#xA;    &lt;/div&gt;&#xA;  &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Build and start Notary Server with the sample certificates.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Manage keys for content trust</title>
      <link>https://docker.qubitpi.org/engine/security/trust/trust_key_mng/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docker.qubitpi.org/engine/security/trust/trust_key_mng/</guid>
      <description>&lt;p&gt;Trust for an image tag is managed through the use of keys. Docker&#39;s content&#xA;trust makes use of five different types of keys:&lt;/p&gt;&#xA;&lt;div class=&#34;overflow-x-auto&#34;&gt;&#xA;  &lt;table&gt;&#xA;    &lt;thead class=&#34;bg-gray-light-100 dark:bg-gray-dark-200&#34;&gt;&#xA;        &lt;tr&gt;&#xA;            &lt;th class=&#34;p-2&#34; style=&#34;text-align: left&#34;&gt;Key&lt;/th&gt;&#xA;            &lt;th class=&#34;p-2&#34; style=&#34;text-align: left&#34;&gt;Description&lt;/th&gt;&#xA;        &lt;/tr&gt;&#xA;    &lt;/thead&gt;&#xA;    &lt;tbody&gt;&#xA;        &lt;tr&gt;&#xA;            &lt;td class=&#34;p-2&#34; style=&#34;text-align: left&#34;&gt;root key&lt;/td&gt;&#xA;            &lt;td class=&#34;p-2&#34; style=&#34;text-align: left&#34;&gt;Root of content trust for an image tag. When content trust is enabled, you create the root key once. Also known as the offline key, because it should be kept offline.&lt;/td&gt;&#xA;        &lt;/tr&gt;&#xA;        &lt;tr&gt;&#xA;            &lt;td class=&#34;p-2&#34; style=&#34;text-align: left&#34;&gt;targets&lt;/td&gt;&#xA;            &lt;td class=&#34;p-2&#34; style=&#34;text-align: left&#34;&gt;This key allows you to sign image tags, to manage delegations including delegated keys or permitted delegation paths. Also known as the repository key, since this key determines what tags can be signed into an image repository.&lt;/td&gt;&#xA;        &lt;/tr&gt;&#xA;        &lt;tr&gt;&#xA;            &lt;td class=&#34;p-2&#34; style=&#34;text-align: left&#34;&gt;snapshot&lt;/td&gt;&#xA;            &lt;td class=&#34;p-2&#34; style=&#34;text-align: left&#34;&gt;This key signs the current collection of image tags, preventing mix and match attacks.&lt;/td&gt;&#xA;        &lt;/tr&gt;&#xA;        &lt;tr&gt;&#xA;            &lt;td class=&#34;p-2&#34; style=&#34;text-align: left&#34;&gt;timestamp&lt;/td&gt;&#xA;            &lt;td class=&#34;p-2&#34; style=&#34;text-align: left&#34;&gt;This key allows Docker image repositories to have freshness security guarantees without requiring periodic content refreshes on the client&#39;s side.&lt;/td&gt;&#xA;        &lt;/tr&gt;&#xA;        &lt;tr&gt;&#xA;            &lt;td class=&#34;p-2&#34; style=&#34;text-align: left&#34;&gt;delegation&lt;/td&gt;&#xA;            &lt;td class=&#34;p-2&#34; style=&#34;text-align: left&#34;&gt;Delegation keys are optional tagging keys and allow you to delegate signing image tags to other publishers without having to share your targets key.&lt;/td&gt;&#xA;        &lt;/tr&gt;&#xA;    &lt;/tbody&gt;&#xA;  &lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt;When doing a &lt;code&gt;docker push&lt;/code&gt; with Content Trust enabled for the first time, the&#xA;root, targets, snapshot, and timestamp keys are generated automatically for&#xA;the image repository:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Play in a content trust sandbox</title>
      <link>https://docker.qubitpi.org/engine/security/trust/trust_sandbox/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docker.qubitpi.org/engine/security/trust/trust_sandbox/</guid>
      <description>&lt;p&gt;This page explains how to set up and use a sandbox for experimenting with trust.&#xA;The sandbox allows you to configure and try trust operations locally without&#xA;impacting your production images.&lt;/p&gt;&#xA;&lt;p&gt;Before working through this sandbox, you should have read through the&#xA;&#xA;  &lt;a class=&#34;link&#34; href=&#34;https://docker.qubitpi.org/engine/security/trust/&#34;&gt;trust overview&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;h2 class=&#34; scroll-mt-20&#34; id=&#34;prerequisites&#34;&gt;&#xA;  &lt;a class=&#34;text-black dark:text-white no-underline hover:underline&#34; href=&#34;#prerequisites&#34;&gt;&#xA;    Prerequisites&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;These instructions assume you are running in Linux or macOS. You can run&#xA;this sandbox on a local machine or on a virtual machine. You need to&#xA;have privileges to run docker commands on your local machine or in the VM.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
