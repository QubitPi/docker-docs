<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Manage data in Docker on Docker Docs</title>
    <link>https://docs.docker.com/storage/</link>
    <description>Recent content in Manage data in Docker on Docker Docs</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="https://docs.docker.com/storage/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Bind mounts</title>
      <link>https://docs.docker.com/storage/bind-mounts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docs.docker.com/storage/bind-mounts/</guid>
      <description>Bind mounts have been around since the early days of Docker. Bind mounts have limited functionality compared to volumes. When you use a bind mount, a file or directory on the host machine is mounted into a container. The file or directory is referenced by its absolute path on the host machine. By contrast, when you use a volume, a new directory is created within Docker&#39;s storage directory on the host machine, and Docker manages that directory&#39;s contents.</description>
    </item>
    <item>
      <title>containerd image store with Docker Engine</title>
      <link>https://docs.docker.com/storage/containerd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docs.docker.com/storage/containerd/</guid>
      <description>Note&#xA;The containerd image store is an experimental feature of Docker Engine. If you&#39;re using Docker Desktop, refer to the instructions on the containerd image store with Docker Desktop page.&#xA;containerd, the industry-standard container runtime, uses snapshotters instead of the classic storage drivers for storing image and container data. While the overlay2 driver still remains the default driver for Docker Engine, you can opt in to using containerd snapshotters as an experimental feature.</description>
    </item>
    <item>
      <title>tmpfs mounts</title>
      <link>https://docs.docker.com/storage/tmpfs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docs.docker.com/storage/tmpfs/</guid>
      <description>Volumes and bind mounts let you share files between the host machine and container so that you can persist data even after the container is stopped.&#xA;If you&#39;re running Docker on Linux, you have a third option: tmpfs mounts. When you create a container with a tmpfs mount, the container can create files outside the container&#39;s writable layer.&#xA;As opposed to volumes and bind mounts, a tmpfs mount is temporary, and only persisted in the host memory.</description>
    </item>
    <item>
      <title>Volumes</title>
      <link>https://docs.docker.com/storage/volumes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://docs.docker.com/storage/volumes/</guid>
      <description>Volumes are the preferred mechanism for persisting data generated by and used by Docker containers. While bind mounts are dependent on the directory structure and OS of the host machine, volumes are completely managed by Docker. Volumes have several advantages over bind mounts:&#xA;Volumes are easier to back up or migrate than bind mounts. You can manage volumes using Docker CLI commands or the Docker API. Volumes work on both Linux and Windows containers.</description>
    </item>
  </channel>
</rss>
