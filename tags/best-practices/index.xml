<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Best practices on Docker Docs</title>
    <link>http://localhost:1313/tags/best-practices/</link>
    <description>Recent content in Best practices on Docker Docs</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="http://localhost:1313/tags/best-practices/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Best practices for working with environment variables in Docker Compose</title>
      <link>http://localhost:1313/compose/how-tos/environment-variables/best-practices/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/compose/how-tos/environment-variables/best-practices/</guid>
      <description>&lt;h4 class=&#34; scroll-mt-20&#34; id=&#34;handle-sensitive-information-securely&#34;&gt;&#xA;  &lt;a class=&#34;text-black dark:text-white no-underline hover:underline&#34; href=&#34;#handle-sensitive-information-securely&#34;&gt;&#xA;    Handle sensitive information securely&#xA;  &lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&#xA;&lt;p&gt;Be cautious about including sensitive data in environment variables. Consider using &#xA;  &lt;a class=&#34;link&#34; href=&#34;http://localhost:1313/compose/how-tos/use-secrets/&#34;&gt;Secrets&lt;/a&gt; for managing sensitive information.&lt;/p&gt;&#xA;&#xA;&lt;h4 class=&#34; scroll-mt-20&#34; id=&#34;understand-environment-variable-precedence&#34;&gt;&#xA;  &lt;a class=&#34;text-black dark:text-white no-underline hover:underline&#34; href=&#34;#understand-environment-variable-precedence&#34;&gt;&#xA;    Understand environment variable precedence&#xA;  &lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&#xA;&lt;p&gt;Be aware of how Docker Compose handles the &#xA;  &lt;a class=&#34;link&#34; href=&#34;http://localhost:1313/compose/how-tos/environment-variables/envvars-precedence/&#34;&gt;precedence of environment variables&lt;/a&gt; from different sources (&lt;code&gt;.env&lt;/code&gt; files, shell variables, Dockerfiles).&lt;/p&gt;&#xA;&#xA;&lt;h4 class=&#34; scroll-mt-20&#34; id=&#34;use-specific-environment-files&#34;&gt;&#xA;  &lt;a class=&#34;text-black dark:text-white no-underline hover:underline&#34; href=&#34;#use-specific-environment-files&#34;&gt;&#xA;    Use specific environment files&#xA;  &lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&#xA;&lt;p&gt;Consider how your application adapts to different environments. For example development, testing, production, and use different &lt;code&gt;.env&lt;/code&gt; files as needed.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Building best practices</title>
      <link>http://localhost:1313/build/building/best-practices/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/build/building/best-practices/</guid>
      <description>&lt;h2 class=&#34; scroll-mt-20&#34; id=&#34;use-multi-stage-builds&#34;&gt;&#xA;  &lt;a class=&#34;text-black dark:text-white no-underline hover:underline&#34; href=&#34;#use-multi-stage-builds&#34;&gt;&#xA;    Use multi-stage builds&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;Multi-stage builds let you reduce the size of your final image, by creating a&#xA;cleaner separation between the building of your image and the final output.&#xA;Split your Dockerfile instructions into distinct stages to make sure that the&#xA;resulting output only contains the files that are needed to run the application.&lt;/p&gt;&#xA;&lt;p&gt;Using multiple stages can also let you build more efficiently by executing&#xA;build steps in parallel.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Best practices</title>
      <link>http://localhost:1313/desktop/features/wsl/best-practices/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/desktop/features/wsl/best-practices/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Always use the latest version of WSL. At a minimum you must use WSL version 1.1.3.0., otherwise Docker Desktop may not work as expected. Testing, development, and documentation is based on the newest kernel versions. Older versions of WSL can cause:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Docker Desktop to hang periodically or when upgrading&lt;/li&gt;&#xA;&lt;li&gt;Deployment via SCCM to fail&lt;/li&gt;&#xA;&lt;li&gt;The &lt;code&gt;vmmem.exe&lt;/code&gt; to consume all memory&lt;/li&gt;&#xA;&lt;li&gt;Network filter policies to be applied globally, not to specific objects&lt;/li&gt;&#xA;&lt;li&gt;GPU failures with containers&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;To get the best out of the file system performance when bind-mounting files, it&#39;s recommended that you store source code and other data that is bind-mounted into Linux containers. For instance, use &lt;code&gt;docker run -v &amp;lt;host-path&amp;gt;:&amp;lt;container-path&amp;gt;&lt;/code&gt; in the Linux file system, rather than the Windows file system. You can also refer to the &#xA;  &lt;a&#xA;    class=&#34;link&#34;&#xA;    href=&#34;https://learn.microsoft.com/en-us/windows/wsl/compare-versions&#34;&#xA;    rel=&#34;noopener&#34;&gt;recommendation&lt;span class=&#34;pl-1 icon-svg icon-sm&#34;&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; width=&#34;48&#34; height=&#34;48&#34; viewBox=&#34;0 -960 960 960&#34;&gt;&lt;path d=&#34;M180-120q-24 0-42-18t-18-42v-600q0-24 18-42t42-18h249q12.75 0 21.38 8.68 8.62 8.67 8.62 21.5 0 12.82-8.62 21.32-8.63 8.5-21.38 8.5H180v600h600v-249q0-12.75 8.68-21.38 8.67-8.62 21.5-8.62 12.82 0 21.32 8.62 8.5 8.63 8.5 21.38v249q0 24-18 42t-42 18H180Zm600-617L403-360q-9 9-21 8.5t-21-9.5q-9-9-9-21t9-21l377-377H549q-12.75 0-21.37-8.68-8.63-8.67-8.63-21.5 0-12.82 8.63-21.32 8.62-8.5 21.37-8.5h261q12.75 0 21.38 8.62Q840-822.75 840-810v261q0 12.75-8.68 21.37-8.67 8.63-21.5 8.63-12.82 0-21.32-8.63-8.5-8.62-8.5-21.37v-188Z&#34;/&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/a&gt; from Microsoft.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Custom kernels on WSL</title>
      <link>http://localhost:1313/desktop/features/wsl/custom-kernels/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/desktop/features/wsl/custom-kernels/</guid>
      <description>&lt;p&gt;Docker Desktop depends on several kernel features built into the default&#xA;WSL 2 Linux kernel distributed by Microsoft. Consequently, using a&#xA;custom kernel with Docker Desktop on WSL 2 is not officially supported&#xA;and may cause issues with Docker Desktop startup or operation.&lt;/p&gt;&#xA;&lt;p&gt;However, in some cases it may be necessary&#xA;to run custom kernels; Docker Desktop does not block their use, and&#xA;some users have reported success using them.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
